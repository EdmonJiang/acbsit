extends layout
      
block content
  .staffContainer.c-body-top(ng-controller="symCtrl")
    .container
      h1 Altiris PC Information Query
      br
      br
      form#site-form.form-horizontal(ng-submit="submitInfo()")
        div.row
          label.col-sm-2.col-sm-offset-1.search-label(for='site') Search:
          .col-sm-6.search-box
            input#qword.form-control(type='text' name="q" data-provide="typeahead" autocomplete="off" ng-disabled="searching" ng-model="form.value" placeholder="Enter a computer name, '^abcd' starts with 'abcd', 'abcd$' ends with 'abcd'" autofocus)
            span#spinner.loader-circle.input-spinner.hidden
          .col-sm-3
            h5(ng-class="errMsg.class" ng-bind="errMsg.text")
        .col-sm-10.col-sm-offset-1
          .panel(style="text-align:center")
            label.radio-inline
              input(type="radio" name="key" ng-model="form.key" id="PCName" value="pcname" ng-checked="true" title="Enter a computer name, '^abcd' starts with 'abcd', 'abcd$' ends with 'abcd'")
              |Computer Name
            label.radio-inline
              input(type="radio" name="key" ng-model="form.key" id="ADUser" value="aduser" title="Enter a windows logon name, '^abcd' starts with 'abcd', 'abcd$' ends with 'abcd'")
              |Windows Logon Name

    .siteinfo
      div(class="ng-hide" ng-show="searching" style="position:relative; width:10vmin; margin:0 auto")
        .cover
        .loader-circle
      table#results-table.table.table-striped.table-hover
        tr
          th PC Name
          th Primary User
          th PC Domain
          th OS Name
          th Computer Model
          th Serial Number
          th TPM Activated
          th Encryption Status
          th IP Address
          th Last Connected
        tbody
          tr(ng-repeat="user in users")
            td
              a(href="javascript:void(0)" ng-click="getDetails([user['PC Name'],user['PC Domain'],user['Primary User']], 'PC')" ng-bind="user['PC Name']")
            td
              a(href="javascript:void(0)" ng-click="getDetails([user['Primary User']], 'User')" ng-bind="user['Primary User']")
            td(ng-bind="user['PC Domain']")
            td(ng-bind="user['OS Name']")
            td(ng-bind="user['Computer Model']")
            td
              a(href="javascript:void(0)" ng-click="getDetails([user['Serial Number']], 'SN')" ng-bind="user['Serial Number']")
            td(ng-bind="user['TPM Activated']")
            td(ng-bind="user['Encryption Status']")
            td(ng-bind="user['IP Address']")
            td(ng-bind="user['Last Connected'] | date:'yyyy-MM-dd HH:mm:ss'")
      .div-btnExport.pull-right(class="ng-hide" ng-show="users.length>0")
        button(type="button" ng-click="export2csv(users)") Export ThisPage
        button(type="button" style="margin-left:5px" ng-click="export2csv(totalUsers)") Export AllPages
      nav(aria-label="Page navigation" class="ng-hide" ng-show="totalPage")
        ul.pagination(style="margin: 0")
          li.page-item(ng-class="{disabled:curPage <= 1}")
            a.page-link(href="javascript:void(0)" ng-click="get_page(1)" aria-label="First") First
          li.page-item(ng-class="{disabled:curPage <= 1}")
            a.page-link(href="javascript:void(0)" ng-click="get_page(curPage-1)" aria-label="Previous")
              span(aria-hidden="true") &lt;
              span.sr-only Previous
          li.page-item(ng-repeat="page in showPage" ng-class="{active: page === curPage}")
            a.page-link(href="javascript:void(0)" ng-click="get_page(page)" ng-bind="page") 1
          li.page-item(ng-class="{disabled:curPage >= totalPage}")
            a.page-link(href="javascript:void(0)" ng-click="get_page(curPage+1)" aria-label="Next")
              span(aria-hidden="true") &gt;
              span.sr-only Next
          li.page-item(ng-class="{disabled:curPage >= totalPage}")
            a.page-link(href="javascript:void(0)" ng-click="get_page(totalPage)" aria-label="Last") Last

  #sym-modal.modal.fade(tabindex="-1" role="dialog" aria-labelledby="symModalLabel" aria-hidden="true")
    .modal-dialog.modal-lg
      .modal-content
        .modal-header
          button.close(type="button" data-dismiss="modal")
            span(aria-hidden="true") &times;
            span.sr-only Close
          h4#symModalLabel.modal-title Details
        .modal-body
          strong Filter:&nbsp;
          input#txtFilter(type="text")
          table#table-detail.table.table-striped.table-hover.table-condensed(style="margin-top:10px")
        .modal-footer
          button.btn.btn-default(type="button" data-dismiss="modal") Close

append script
  script(src='//cdn.bootcss.com/bootstrap-3-typeahead/4.0.2/bootstrap3-typeahead.min.js')
  script.
    $(function() {
      (function ($) {
        var $input = $("#qword");
        
        $("input:radio").on("click", function() {
          var tip = $(this).attr("title");
          $input.attr("placeholder", tip);
          $input.typeahead('destroy');
          var name = $(this).val();
          setTypeahead($input, name);
        })

        $("#txtFilter").keyup(function(e){
          var keyword = $(this).val();
          if( keyword != ""){
            var reg = new RegExp(keyword, 'i');
            $('#table-detail tr').hide().filter(function(){return $(this).text().match(reg)}).show();
            }else{
            $('#table-detail tr').show();
            }
        })

        setTimeout(function(){
          $('input[type=radio][checked]').click();
        }, 500)

        var $spinner = $("#spinner");
        function setTypeahead(objInput, name) {
          objInput.typeahead({
            delay: 700,
            fitToElement: true,
            source: function(query, callback){
              var txt = objInput.val();
              if(!query.trim() || !txt || /\^|\$|\\|\/|\[|\]|\(|\)|\{|\}|^\s$|\?/.test(txt)){
                return;
              }
              $spinner.removeClass("hidden");
              $.getJSON('/cmdb/symantec/altiris/hint/?'+name+'='+query, function(data){
                var list = data.map(function(item){
                    return item._id;
                })
                $spinner.addClass("hidden");
                if(!list.length){
                  return;
                }
                callback(list);
              })
            },
            matcher: function(item){
              return item;
            }
          })
        }

      })(jQuery);
    });